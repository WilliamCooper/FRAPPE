%% LyX 2.1.2 created this file.  For more info, see http://www.lyx.org/.
%% Do not edit unless you really know what you are doing.
\documentclass[12pt]{article}
\usepackage{mathptmx}
\usepackage[T1]{fontenc}
\usepackage[letterpaper]{geometry}
\geometry{verbose,tmargin=3.54cm,bmargin=2.54cm,lmargin=2.54cm,rmargin=2.54cm,headheight=1cm,headsep=2cm,footskip=0.5cm}
\usepackage{fancyhdr}
\pagestyle{fancy}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\setlength{\parskip}{\medskipamount}
\setlength{\parindent}{0pt}
\usepackage{color}
\usepackage{varioref}
\usepackage{float}
\usepackage{booktabs}
\usepackage{fancybox}
\usepackage{calc}
\usepackage{amsmath}
\usepackage{graphicx}
\usepackage[unicode=true]
 {hyperref}
\usepackage{breakurl}

\makeatletter

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% LyX specific LaTeX commands.
%% Because html converters don't know tabularnewline
\providecommand{\tabularnewline}{\\}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
\input colordvi
\usepackage{color}
\fancyhead{}
\fancyfoot[CE,CO]{}
\newtoks{\addressee} \global\addressee={}
\newdimen\longindent \longindent=3.5truein
\fancyhead[L]{Memo to: \the\addressee \\ \datetoday \\ Page \thepage \hfill}
\renewcommand{\headrulewidth}{0.0pt}
\newenvironment{lyxlist}[1]
{\begin{list}{}
{\settowidth{\labelwidth}{#1}
\setlength{\leftmargin}{\labelwidth}
\addtolength{\leftmargin}{\labelsep}
\renewcommand{\makelabel}[1]{##1\hfil}}}
{\end{list}}
\newcommand{\datetoday}{\number\day\space
     \ifcase\month\or January\or February\or March\or April\or May\or
     June\or July\or August\or September\or October\or November\or
     December\fi
     \space\number\year}
\newcommand{\EOLmemo}{\null \vskip-1.5truein
{\raggedright \textsf{\textsc{\large \textcolor{blue}{Earth Observing Laboratory}}}}\par
{\raggedright \textsf{\textsl{\textcolor{blue}{Memorandum:}}}} \par \vskip6pt
{\color{blue}{\hrule}}\par
\vskip0.3truein \leftline{\hskip \longindent \datetoday} \vskip0.2truein
\thispagestyle{empty}}
\newcommand{\attachm}[1]{\begin{lyxlist}{Attachments:00}
\item [Attachments:] {#1}
\end{lyxlist}}
\newcommand{\cc}[1]{\begin{lyxlist}{Attachments:00}
\item [cc:] {#1}
\end{lyxlist}}
\newcommand{\attach}[1]{\begin{lyxlist}{Attachments:00}
\item [Attachment:] {#1}
\end{lyxlist}}
%usage: \encl{A\\B\\C} or \cc{ma,e1\\name2\\name3}

\makeatother

\begin{document}
\EOLmemo 

\global\addressee={FRAPPE data-processing file}  % >>change "File" to the "To:" name desired

\begin{tabular}{ll}
\textsf{\textsc{\textcolor{blue}{To:}}} & \the\addressee\tabularnewline
\textsf{\textsc{\textcolor{blue}{From:}}} & Al Cooper\tabularnewline
\textsf{\textsc{\textcolor{blue}{Subject:}}} & Some suggestions re FRAPPE processing for wind and pressure\tabularnewline
\end{tabular}

\bigskip

This memo discusses some studies of the wind measurements for FRAPPE
and the related corrections to pressure based on the earlier calibration
via LAMS.


\section{Calibration of the angle-of-attack}

The speed run from 15:50:00 to 15:55:00 on FRAPPE flight 4 provides
good data for determining the angle-of-attack sensitivity coefficients.
The equation used for the fit is

\begin{equation}
\alpha_{ref}=\theta-\frac{w_{p}}{V}=b_{0}+b_{1}\frac{\Delta p_{\alpha}}{q}\label{eq:AOAfitEq}
\end{equation}
where $\theta=$PITCH, $w_{p}=$GGVSPDB, $V=$TASX, $\Delta p_{\alpha}=$ADIFR,
and $q=$QCF. The choice for representing $q$ is based on QCF being
more reliable than QCR and not requiring prior pressure-defect correction
as does PSXC (the use of which introduces circularity in the calculation
because the pressure correction itself depends on angle of attack.
The left side of (\ref{eq:AOAfitEq}) is equal to the angle of attack
if the vertical wind is zero, so the use of this result depends on
the calibration maneuver being flown in air without vertical motion. 

<<initialization,echo=FALSE,include=FALSE>>=
opts_chunk$set(echo=FALSE, include=FALSE, fig.lp="fig:", fig.show="asis")
opts_chunk$set(fig.width=6, fig.height=5, fig.align="center", digits=3)
thisFileName <- "FRAPPEprocessing"
require(Ranadu, quietly = TRUE, warn.conflicts=FALSE)
require(ggplot2)
require(grid)
library(knitr)
require(ggthemes)
require(vioplot)
require(plyr)
Flight <- "rf04"        
Project = "FRAPPE"
Directory <- DataDirectory()
fname = sprintf("%s%s/%s%s.nc", Directory, Project, Project, Flight)
print(fname)
VarNames <- c("VYC","GGALT","LATC", "LONC", "PSXC", "QCXC",
              "WDC", "WSC", "GGVEW", "GGVNS", "VEW", "VNS", "TASX",
              "ADIFR", "AKRD", "SSLIP", "PITCH", "GGTRK",
              "ROLL", "THDG", "BDIFR", "EWX", "WIC", "GGSPDB",
              "VSPD", "ATX", "PSFD", "QCF", "GGVSPDB", "GGVEWB", "GGVNSB")
Data <- getNetCDF (fname, VarNames)
r <- setRange (Data$Time, 155000, 155500) # speed run
DataP <- Data[r,]
Valid <- (DataP$TASX > 100.)
DataV <- DataP[Valid,]
#attach(DataV)
Cradeg <- pi / 180.
Mach <- MachNumber (DataV$PSFD, DataV$QCF)  # uses uncorrected q, p
AOAREF <- DataV$PITCH - asin(DataV$GGVSPDB/DataV$TASX) / Cradeg
AQR <- DataV$ADIFR/DataV$QCF # basic pressure ratio for AOA
<<AOA-fit-with-summary-and-plot, fig.lp="fig:", fig.cap="Fit AOA vs reference AOA ($\\alpha_{ref}$) from Eq.\ 1. The orange dashed line shows the fit for which details and coefficients are shown in the text.", echo=FALSE, include=TRUE, size="footnotesize">>==
DataV["AOAREF"] <- AOAREF
DataV["AQR"]    <- AQR
fmy <- lm(AOAREF~AQR, data=DataV)
print (summary(fmy))
cfr <- coefficients (fmy)
A1 <- cfr[1]+cfr[2]*AQR
#plot (AOAREF, A1, pch=16, cex=0.8, col='blue', xlab="Ref. AOA", ylab="fit AOA")
#lines (c(-3.,6.), c(-3.,6.), lty=2, lwd=3, col='darkorange')
g <- ggplot(data=DataV, aes(x=AOAREF, y=AQR))
g <- g + geom_point (pch=20, col='blue')
g <- g + geom_smooth (method='lm', col='darkorange', lty=2, lwd=1.5)
g <- g + xlab("Reference AOA [deg.]") + ylab ("AOA from fit [deg.]") + theme_WAC()
print(g)
capnF3 <- "The sideslip attack determined from the fit, as a function of the reference angle provided by Equation (\ref{eq:betaFunctionForm}), for the data from FRAPPE flight RF04, 154510--154650."

@

The standard error for the fitted values is \Sexpr{round(summary(fmy)$sigma, digits=3)}$^{\circ}$
so this is a very good fit, with correlation coefficient of about
\Sexpr{round(summary(fmy)$r.squared^0.5, digits=3)}. If instead VSPD
is used for the vertical-speed variable, the standard error is 0.116$^{\circ}$,
only slightly worse, but the coefficients change enough that using
the higher-quality GPS measurement seems preferable. These results
are also significantly different from those previously used, but the
radome has been changed on the C-130 so that may explain the change
in sensitivity coefficients.


\section{Corrections to ambient and dynamic pressure}

A correction procedure was developed previously for correcting both
dynamic and ambient pressure measurements using flights on which the
laser air motion sensor (LAMS) was operating. These are described
in \href{http://www.atmos-meas-tech.net/7/3215/2014/amt-7-3215-2014.pdf}{this paper}.%
\footnote{Atmos. Meas. Tech., 7, 3215-3231, 2014%
} However, two problems have arisen in applying those results to the
C-130 in FRAPPE. First, the radome on the C-130 was changed and this
led to apparent changes in the sensitivity coefficients for measurement
of angle of attack, as discussed in the previous section. Because
the pressure corrections in that paper were formulated in terms of
$\Delta p_{\alpha}$=ADIFR and $q_{r}=$QCR, the parameterized fit
from that paper no longer applies to the new radome. Second, because
the radome dynamic pressure QCR encounters problems with icing or
frozen lines more often than the measurement QCF from a pitot tube,
the latter is a better choice for representing angle-of-attack and
is used in the preceding section to find coefficients for calculating
angle of attack. The formula for correcting the pressures therefore
needs to be corrected to use angle of attack, to make the correction
general and not specific to one radome, and the translation from the
previous formulation needs to account for the change in underlying
variable QCF instead of QCR. 

The correction from the paper referenced above was:

\begin{equation}
\frac{\Delta p}{p}=b_{0-}^{\prime}+b_{1}^{\prime}\frac{\Delta p_{\alpha}}{\Delta q_{r}}+b_{2}^{\prime}M\label{eq:PCOReq1}
\end{equation}
where $\Delta p$ is the correction to be applied to pressure and
$M$ is the Mach number. The Mach number used in the fit was that
determined from the uncorrected measurements of ambient and dynamic
pressure, which on the C-130 were PSFD and QCF. The coefficients determined
by fitting (\vref{eq:PCOReq1}) to the corrections determined using
LAMS were \{$b^{\prime}$\} = \{0.00152, 0.0205, 0.0149\}. In the
document on \href{https://drive.google.com/file/d/0B1kIUH45ca5Ab2Z6cld1M1cydjA/view?usp=sharing}{Processing Algorithms},
this formula was transformed to a dependence on angle of attack rather
than on the pressures from the radome, leading to this representation
for the pressure correction term:\\
\begin{equation}
\frac{\Delta p}{p}=b_{0}^{*}+b_{1}^{*}\alpha+b_{2}^{*}M\label{eq:PCOReq2}
\end{equation}
where $\alpha$ is the angle of attack. The coefficients are then
\{$b^{*}$\} = \{-0.00637, 0.001366, 0.0149\} for PSFD and \{-0.00754,
0.000497, 0.0368\} for PSFRD. The same corrections apply with reversed
sign to QCF and QCFR, respectively. With the new angle of attack determined
as in Sect.~1, these results should remain valid for the new radome
and so should be applicable to FRAPPE. 


\section{Sideslip}


\subsection{Sensitivity coefficient\label{sub:Sensitivity-coefficient}}

Calibration of the sideslip angle is more difficult, both because
the equations are more complicated and because the maneuver is very
hard to fly. Ideally, the sideslip maneuver should only change yaw
angle and heading without change in roll, altitude, or angle-of-attack,
but that is impossible. It is practical, however, to minimize roll
and change in altitude, and that was how these maneuvers were flown.

For yaw maneuvers,
the calibration is based on the expectation that the horizontal wind
remains constant. The first-order equations for the east and north
components of the wind, $u$ and $v$, are:

\begin{eqnarray}
u & = & -U_{a}\sin(\Psi+\beta)+u_{p}\nonumber \\
v & = & -U_{a}\cos(\Psi+\beta)+v_{p}\label{eq:horizWindeqs}
\end{eqnarray}
where $U_{a}$ is the true airspeed, $\Psi$ the heading, $\beta$
the sideslip angle, and $u_{p}$ and $v_{p}$ are the eastward and
northward ground-speed components of the aircraft. These two equations
lead to the following reference formula for $\beta$:

\begin{equation}
\beta^{*}=-\Psi+\arctan\left(\frac{u_{p}-u}{v_{p}-v}\right)\label{eq:beta-equation}
\end{equation}
where the second term represents a correction for the change in direction
of motion of the aircraft, which is difficult to avoid in the yaw
maneuver. The measurements thus provide $\beta^{*}$, an estimate
of the sideslip during the yaw maneuvers.

There is, however, a circular component in (\ref{eq:beta-equation}) because it involves the wind components and those require $\beta$ for their measurement when sideslip changes. To reduce the feedback
from this term, the horizontal wind components $u$ and $v$ were low-pass-filtered with periods ranging from 5--30 s and the filtered values were used in (\ref{eq:beta-equation}). The wind should remain steady during the maneuver, so this reduces any false effect of the maneuver on the measurement. This made negligible difference in the fits, and the coefficients obtained were close to those in use for sideslip, so after exploring this the unfiltered values of the wind were used for the following fit. 


A relatively simple equation provided a very good fit to the measurements:

\begin{equation}
\beta^{*}=e_{0}+e_{1}\frac{\Delta p_{\beta}}{q}\label{eq:betaFunctionForm}
\end{equation}
where $\Delta p_{\beta}$ is the pressure difference between horizontally
separated pressure ports on the radome and $q$ is the dynamic pressure: 
$\Delta p_{\beta}=$BDIFR and $q=$QCF. 

A good set of yaw maneuvers was flown on FRAPPE flight 4, 15:45:10
to 15:46:50, so measurements from that flight period will be used
to determine the relationship between the wind-sensing pressure measurements
and the change in yaw angle. The measurements from that flight segment
gave a good fit to Eq.~\ref{eq:betaFunctionForm}, with the following
fit characteristics, as plotted in Fig.\textasciitilde{}\ref{fig:sideslip}.

<<sideslip,fig.cap=capnF3, fig.align="center", echo=FALSE, include=TRUE, size='footnotesize'>>=
# sideslip calibration:

# first get filtered wind-component values:
# u <- -1. * D$WSC * sin (D$WDC*Cradeg)
# v <- -1. * D$WSC * cos (D$WDC*Cradeg)
# u <- ButterworthFilter (u, tau=30)
# v <- ButterworthFilter (v, tau=30)

r <- setRange (Data$Time, 154510,154650)

DataP <- Data[r,]
Valid <- (DataP$TASX > 100.)
DataV <- DataP[Valid,]
#attach(DataV)
Hmean <- mean(DataV$THDG)
u <- -1. * DataV$WSC * sin (DataV$WDC*Cradeg)
v <- -1. * DataV$WSC * cos (DataV$WDC*Cradeg)
#u <- ButterworthFilter(u, tau=20.)
#v <- ButterworthFilter(v, tau=20.)
# u[1:length(r1)] <- u1
# u[(length(r1)+1):length(c(r1,r2))] <- u2
# u[(length(c(r1,r2))+1):length(r)] <- u3
# v[1:length(r1)] <- v1
# v[(length(r1)+1):length(c(r1,r2))] <- v2
# v[(length(c(r1,r2))+1):length(r)] <- v3
# tauslip = 10.
# u[1:length(r1)] <- ButterworthFilter(u[1:length(r1), tau=tauslip)
# u[(length(r1)+1):length(c(r1,r2))] <- ButterworthFilter(u[(length(r1)+1):length(c(r1,r2))], tau=tauslip)
# u[(length(c(r1,r2))+1):length(r)] <- ButterworthFilter(u[(length(c(r1,r2))+1):length(r)], tau=tauslip)
# v[1:length(r1)] <- ButterworthFilter(v[1:length(r1), tau=tauslip)
# v[(length(r1)+1):length(c(r1,r2))] <- ButterworthFilter(v[(length(r1)+1):length(c(r1,r2))], tau=tauslip)
# v[(length(c(r1,r2))+1):length(r)] <- ButterworthFilter(v[(length(c(r1,r2))+1):length(r)], tau=tauslip)

SSREF <- -DataV$THDG + atan2((DataV$VEW-u), (DataV$VNS-v))/ Cradeg
SSREF[SSREF < -180.] <- SSREF[SSREF < -180.] + 360.
#plot (SSREF, SSLIP, pch=16, cex=0.6,col='blue')
BQR <- DataV$BDIFR / DataV$QCF
DataV["SSREF"] <- SSREF
DataV["BQR"] <- BQR
sfm <- lm(SSREF~BQR, data=DataV)
cfs <- coefficients(sfm)
#print(c("Fit coefficients are: ",cfs))
print(summary(sfm))
S2 <- cfs[1] + cfs[2] * BQR
#plot (SSREF, S2, pch=16, cex=0.6, col='blue',
#      xlab="SS Reference", ylab="SSLIP from fit")
#lines(c(-8.,8.), c(-8.,8.), col='orange', lty=2, lwd=3)
DataV["S2"] <- S2
g <- ggplot (data=DataV, aes(x=SSREF, y=S2))
g <- g + geom_point (pch=20, col='blue') + geom_smooth (method='lm', col='darkorange', lty=2, lwd=1.5)
g <- g + xlab("Reference Value of Sideslip from (4) [deg.]") + ylab ("SSLIP from fit [deg.]")
g <- g + theme_WAC()
print (g)

@

The result from the calibration is also shown in Fig.\ 2, as the dashed orange line. The square of the correlation was exceptionally high, 0.999, the residual standard error was 0.10$^{\circ}$, and the best-fit coefficients were \{$e_0$, $e_1$\} = \{$-$0.165, 12.852\}. For comparison, the standard values from the calibration of the previous radome were \{-0.012, 12.21\}, so the sideslip calibration is changed less than that for angle-of-attack but is still significantly different from the old calibration. However, the offset (or first term in the fitted equation) is dependent on the heading being accurate, and the heading has errors that are different for each flight and during flights. It is therefore useful to check the first coefficient in other ways, either by circle or reverse-heading maneuvers. The first coefficient representing the offset will therefore be revised below on the basis of additional information from such maneuvers.




<<caption2, echo=FALSE, include=FALSE>>=
cap3panel <- "Wind components measured during the reverse-heading maneuver of FRAPPE flight RF04, 1558--1610. The red dashed lines indicate the straight legs before and after the turn to reverse course and show the mean values averaged over those segments. The top panel shows the longitudinal wind component, the middle panel the lateral wind component as originally processed, and the bottom panel the lateral wind with the new calibration but adjusted to eliminate the offset."
@


\subsection{Sideslip offset}


\subsubsection{Reverse-heading maneuvers}

A reverse-heading maneuver was flown on FRAPPE flight RF04, 160000--160245
and 160615--160815. For such a maneuver, if the wind remains constant,
the expectation is that the longitudinal and lateral components of
the wind each should reverse sign between the two legs. These components
are, approximately, 

\begin{equation}
v_{x}=v_{g}\cos(\xi-\psi)-v_{t}\label{eq:longWind}
\end{equation}
\begin{equation}
v_{y}=v_{g}\sin(\xi-\psi)-v_{t}\sin\beta\label{eq:latWind}
\end{equation}
where $v_{g}$ is the ground speed, $v_{t}$ the true airspeed, $\xi$
the ground-track angle, $\psi$ the heading, and $\beta$ the sideslip
angle. These components are plotted in Fig.\ \ref{fig:actual-plot-1}. The top panel shows that, for the longitudinal component, the reverse-course measurements are almost the negative of each other: The mean for the first leg is 2.15 and that for the second leg is -2.58, so the indicated error is about 0.2 m/s, which is satisfactory especially considering the variability in the measured component during each leg. However, the lateral measurements, shown in the middle panel, indicate a problem, changing from 0.1 to 6.0 m/s and so indicating an error of 3 m/s. To correct for this offset, an offset in sideslip of about +1.45$^{\circ}$ is required. When this is introduced, the lateral measurements from the two legs become -2.99 and +3.01 and so reverse as expected, as shown in the bottom panel of Fig.\ \ref{fig:actual-plot-1}.

<<RevHFig1, include=TRUE>>=

r <- setRange(Data$Time, 155800, 161000)
DataP <- Data[r,]
#attach(DataP)
Vg <- sqrt(DataP$GGVEW**2+DataP$GGVNS**2)
Vlg <- Vg*cos((DataP$GGTRK-DataP$THDG)*Cradeg)-DataP$TASX
Vlt <- Vg*sin((DataP$GGTRK-DataP$THDG)*Cradeg)-DataP$TASX*sin(DataP$SSLIP*Cradeg)
r1 <- setRange(DataP$Time, 160000,160245)
r2 <- setRange(DataP$Time, 160615,160815)
Vlg1 <- mean(Vlg[r1])
Vlg2 <- mean(Vlg[r2])
Vlt1 <- mean(Vlt[r1])
Vlt2 <- mean(Vlt[r2])
print (sprintf("Longitudinal wind averages: %f %f",Vlg1,Vlg2))
print(sprintf("Lateral wind averages:      %f %f",Vlt1,Vlt2))
#SSLIP <- SSLIP+1.25
SSL <- 1.45+cfs[1]+cfs[2]*DataP$BDIFR/DataP$QCF
Vltr <- Vg*sin((DataP$GGTRK-DataP$THDG)*Cradeg)-DataP$TASX*sin(SSL*Cradeg)
# op <- par (mfrow=c(2,1), mar=c(4,4,0,2)+0.1)
# plotWAC(DataP$Time,Vlg,ylab="Longitudinal")
# r1 <- setRange(DataP$Time, 160000,160245)
# r2 <- setRange(DataP$Time, 160615,160815)
# Vlg1 <- mean(Vlg[r1])
# Vlg2 <- mean(Vlg[r2])
# points(DataP$Time[r1], rep(Vlg1, length(r1)), type='l', lwd=3,col='red')
# points(DataP$Time[r2], rep(Vlg2, length(r2)), type='l', lwd=3,col='red')
Vlt1r <- mean(Vltr[r1])
Vlt2r <- mean(Vltr[r2])
#print (c(Vlg1,Vlg2))
print(sprintf("Lateral wind components with new calibration: %f %f",Vlt1,Vlt2))
#detach(DataP)

@

<<actual-plot-1, fig.cap=cap3panel, include=TRUE, fig.height=4.8, fig.width=6.5, fig.lp="fig:">>=
op <- par (mfrow=c(3,1), mar=c(4,4,0,2)+0.1)
Z <-plotWAC(DataP$Time,Vlg,ylab="Longitudinal [m/s]")
points(DataP$Time[r1], rep(Vlg1, length(r1)), type='l', lty=2,lwd=3,col='red')
points(DataP$Time[r2], rep(Vlg2, length(r2)), type='l', lty=2,lwd=3,col='red')
Z <- plotWAC(DataP$Time, Vlt, ylab="Lateral [m/s]")
points(DataP$Time[r1], rep(Vlt1, length(r1)), type='l', lty=2,lwd=3,col='red')
points(DataP$Time[r2], rep(Vlt2, length(r2)), type='l', lty=2,lwd=3,col='red')
Z <- plotWAC(DataP$Time, Vltr, ylab="Revised Lateral [m/s]")
points(DataP$Time[r1], rep(Vlt1r, length(r1)), type='l', lty=2,lwd=3,col='red')
points(DataP$Time[r2], rep(Vlt2r, length(r2)), type='l', lty=2,lwd=3,col='red')

@

The conditions were not ideal during this maneuver, however, with
important variability along each of the legs as shown in Fig.~3 and
with some mis-alignment of the two legs, so it is worthwhile to consider
other maneuvers. Another reverse-heading maneuver was flown on flight
9, with reverse legs 19:31:00--19:34:00 and 19:36:10--19:39:10. An
analysis like that used for the first reverse-heading maneuver indicated
a slightly higher offset in sideslip,\label{SS-offset} 1.6$^{\circ}$
vs 1.45$^{\circ}$ for the previous maneuver, but as shown in Fig.~\ref{fig:RevHFig2}
the conditions were steadier for this case and the maneuver was flown
very well so this seems to be a better value to use. A source of variability
in the sideslip offset determined in this way is error in heading,
because it is not possible to separate an offset in sideslip from
an offset in heading using reverse-heading maneuvers. Because the
heading standard uncertainty is 0.05$^{\circ}$, uncertainty at this
level also characterizes the offset in sideslip.

<<caption5>>=
cap5panel <- "Wind components measured during the reverse-heading maneuver of FRAPPE flight 9, 193100--193910. The red dashed lines indicate the straight legs before and after the turn to reverse course and show the mean values averaged over those segments. The top panel shows the longitudinal wind component, the middle panel the lateral wind component as originally processed, and the bottom panel the lateral wind with the new calibration but adjusted to eliminate the offset."
@

<<RevHFig2, fig.cap=cap5panel, fig.lp="fig:", fig.height=4.8, fig.width=6.5, include=TRUE>>=

Flight <- "rf09"
fname = sprintf("%s%s/%s%s.nc", Directory, Project, Project, Flight)
#print(fname)
Data <- getNetCDF (fname, VarNames)
r <- setRange(Data$Time, 193100, 193910)
DataP <- Data[r,]
attach(DataP)
Vg <- sqrt(GGVEW**2+GGVNS**2)
Vlg <- Vg*cos((GGTRK-THDG)*Cradeg)-TASX
Vlt <- Vg*sin((GGTRK-THDG)*Cradeg)-TASX*sin(SSLIP*Cradeg)
op <- par (mfrow=c(3,1), mar=c(4,4,0,2)+0.1)
plotWAC(Time,Vlg,ylab="Longitudinal [m/s]")
r1 <- setRange(Time, 193100,193400)
r2 <- setRange(Time, 193610, 193910)
Vlg1 <- mean(Vlg[r1])
Vlg2 <- mean(Vlg[r2])
points(Time[r1], rep(Vlg1, length(r1)), type='l', lty=2,lwd=3,col='red')
points(Time[r2], rep(Vlg2, length(r2)), type='l', lty=2,lwd=3,col='red')
plotWAC(Time, Vlt, ylab="Lateral [m/s]")
Vlt1 <- mean(Vlt[r1])
Vlt2 <- mean(Vlt[r2])
print (sprintf("Longitudinal wind averages: %f %f",Vlg1,Vlg2))
print (sprintf("Lateral wind averages:      %f %f",Vlt1,Vlt2))
points (Time[r1], rep(Vlt1, length(r1)), type='l', lty=2, lwd=3, col='red')
points (Time[r2], rep(Vlt2, length(r2)), type='l', lty=2, lwd=3, col='red')
#SSLIP <- SSLIP+1.25
SSL <- 1.60+cfs[1]+cfs[2]*BDIFR/QCF
Vlt <- Vg*sin((GGTRK-THDG)*Cradeg)-TASX*sin(SSL*Cradeg)
# op <- par (mfrow=c(2,1), mar=c(4,4,0,2)+0.1)
# plotWAC(Time,Vlg,ylab="Longitudinal")
# r1 <- setRange(Time, 160000,160245)
# r2 <- setRange(Time, 160615,160815)
# Vlg1 <- mean(Vlg[r1])
# Vlg2 <- mean(Vlg[r2])
# points(Time[r1], rep(Vlg1, length(r1)), type='l', lwd=3,col='red')
# points(Time[r2], rep(Vlg2, length(r2)), type='l', lwd=3,col='red')
plotWAC(Time, Vlt, ylab="Revised Lateral [m/s]")
Vlt1 <- mean(Vlt[r1])
Vlt2 <- mean(Vlt[r2])
#print (c(Vlg1,Vlg2))
points(Time[r1], rep(Vlt1, length(r1)), type='l', lty=2,lwd=3,col='red')
points(Time[r2], rep(Vlt2, length(r2)), type='l', lty=2,lwd=3,col='red')
print(sprintf("Lateral wind components with new calibration: %f %f",Vlt1,Vlt2))
detach(DataP)

@

<<getCircleData>>=

require(stats) 
D <- Data[setRange (Data$Time, 191900, 192700), ]
cfs[1] <- cfs[1] + 1.6
D["SS"] <- cfs[1] + cfs[2]*D$BDIFR/D$QCF
startL <- 191936
endL <- 192228
startR <- 192308
endR <- 192602
startC <- 191900
endC <- 192700
r <- setRange(D$Time, startC, endC)
r1 <- setRange(D$Time, startL, endL)
r2 <- setRange(D$Time, startR, endR)
meanr1 <- mean(D$ROLL[r1], na.rm=TRUE)
meanr2 <- mean(D$ROLL[r2], na.rm=TRUE)
sdr1 <- sd(D$ROLL[r1], na.rm=TRUE)
sdr2 <- sd(D$ROLL[r2], na.rm=TRUE)
meanv1 <- mean(D$TASX[r1], na.rm=TRUE)
meanv2 <- mean(D$TASX[r2], na.rm=TRUE)
sdv1 <- sd(D$TASX[r1], na.rm=TRUE)
sdv2 <- sd(D$TASX[r2], na.rm=TRUE)
meanv <- mean(D$TASX[c(r1,r2)])
sdv <- sd(D$TASX[c(r1,r2)])
t1 <- setRange(D$Time, startL, endL)
t2 <- setRange(D$Time, startR, endR)
Cradeg = pi/180.

@


\subsubsection{Circle maneuvers}

Another way to determine the offset in sideslip is via circle maneuvers,
in which one or more circles are flown at steady bank angle turning
one direction and then one or more additional circles are flown in
the opposite direction. The measured wind should remain constant around
such circles, so any variations can be used to isolate offsets in
true airspeed (affecting the measurement of the longitudinal component
of the wind) and offsets in sideslip or heading (affecting the measurement
of the lateral component). Two such circles were flown from 19:19--19:27
on flight 9, as shown in Fig.~\ref{fig:CircleFlightPatterns-1}. 

\begin{figure}
\begin{centering}
\includegraphics[width=0.49\textwidth]{R9circles}\includegraphics[width=0.49\textwidth]{R9circleDrift}
\par\end{centering}

\protect\caption{\textsl{Example of circle flight pattern, FRAPPE flight 9, 19:19--19:27
UTC. Left side: normal flight track; right side, flight track plotted
in a reference frame drifting with the horizontal wind.}\label{fig:CircleFlightPatterns-1}}
\end{figure}
If the wind remains steady around the turns, analyses of the measurements
can lead to these results:
\begin{enumerate}
\item Wind can be determined from the GPS-measured ground speeds and the
heading, with no other reference to the normal wind measurements.
\item Measurement of a possible bias in the true-airspeed measurement TASX:
If present, the measured windspeed will change from upwind to downwind
direction.
\item Determining biases in heading and sideslip: If present, the measured
windspeed will change from crosswind-right to crosswind-left positions.
\item An offset in sideslip can be separated from an offset in heading by
checking for the expected sign reversal in sideslip between left-turn
and right-turn circles. 
\item Departures from constant wind can be used to determine possible time
shifts, especially by comparing results from left-turn and right-turn
circles.
\end{enumerate}
Each of these will be explored in this section. To get accurate circle
patterns, it is important that the wind be relatively steady and non-turbulent
and that the roll angle be maintained constant. For this flight segment,
the left-turn circles had a roll angle of \Sexpr{round(meanr1,2)}$\pm$\Sexpr{round(sdr1,2)}
and the right-turn circles had roll angle \Sexpr{round(meanr2,2)}$\pm$\Sexpr{round(sdr2,2)},
while the mean true airspeed for these circles was \Sexpr{round(meanv,1)}$\pm$\Sexpr{round(sdv,1)}.
The steadiness of these measurements indicate that this maneuver was
flown with good precision and reasonably symmetrically, although the
difference in roll is larger than is characteristic of the GV and
may indicate some trim adjustment. The mean roll angles are within
1.5$^{\circ}$ and are quite steady for each turn direction, so it
will be a reasonable approximation to assume that these patterns are
circular.

<<plotGSRMS>>=

# define a chisquare error function:
csq <- function (x, D) {
  hdg <- (D$THDG+D$SS*cos(D$ROLL*pi/180)+x[4]) * pi / 180.
  dvx <- D$GGVEWB - (x[2] + x[1]*sin(hdg))
  dvy <- D$GGVNSB - (x[3] + x[1]*cos(hdg))
  chisq <- sum (dvx**2 + dvy**2)
}
# try shifting GGVxxB forward n samples
rms <- vector("numeric", 29)
GGVEWB <- D$GGVEWB
GGVNSB <- D$GGVNSB
NL <- length(D$GGVEWB)
rmsmin <- 1000
#for (n in 1:1) { 
  #D$GGVNSB <- c(D$GGVNSB[(1+n):NL],rep(D$GGVNSB[NL],n))
  #D$GGVEWB <- c(D$GGVEWB[(1+n):NL],rep(D$GGVEWB[NL],n))
  wx <- 12.3
  wy <- 13.2
  V <- 154.
  hdg <- D$THDG * Cradeg
  A <- nlm (csq, c(V, wx, wy, -0.1), D, hessian=TRUE)
  #D$GGVEWB <- GGVEWB
  #D$GGVNSB <- GGVNSB
  #print(A$estimate)
  V <- A$estimate[1]
  wx <- A$estimate[2]
  wy <- A$estimate[3]
  dh <- A$estimate[4]
 #print(sprintf(" wind estimate: %.1f / %.1f", atan2(wy,wx)*180/pi+180, sqrt(wx**2+wy**2)))
  vx <- V * cos(hdg+dh*Cradeg) + wx
  vy <- V * sin(hdg+dh*Cradeg) + wy
  rms <- (A$minimum/length(D$THDG))**0.5
  if (rms < rmsmin) {
    rmsmin <- rms
    bestFit <- A$estimate
    #nbest <- n
  }
  #print(sprintf("RMS error for shift of %d samples: %5.2f m/s", n, rms[n]))
#}

# impose best-fit shift nbest units forward in time
#D$GGVNSB <- c(D$GGVNSB[(1+nbest):NL],rep(D$GGVNSB[NL],nbest))
#D$GGVEWB <- c(D$GGVEWB[(1+nbest):NL],rep(D$GGVEWB[NL],nbest))
# best-fit wind:
bestWD <- (atan2(bestFit[2], bestFit[3]) / Cradeg + 180.) %% 360
bestWS <- sqrt(bestFit[2]**2 + bestFit[3]**2)
mwd <- mean(D$WDC, na.rm=TRUE)
mws <- mean(D$WSC, na.rm=TRUE)
mtas <- mean(D$TASX, na.rm=TRUE)
D["AA"] <- (D$THDG-mwd) %% 360

@

<<getRMS>>=

hdg <- (D$THDG+bestFit[4])*Cradeg
vx <- bestFit[1] * cos(hdg) + bestFit[2]   
vy <- bestFit[1] * sin(hdg) + bestFit[3]
gs <- sqrt(D$GGVEWB**2+D$GGVNSB**2)
vs <- sqrt(vx**2+vy**2)
rmsgs <- (sum((gs-vs)**2)/length(gs))**0.5
# restore original values
#D$GGVNSB <- GGVNSB
#D$GGVEWB <- GGVEWB

@


\paragraph{Finding the wind from GPS only}

If it is assumed that $\bar{u_{x}}$, $\bar{u_{y}}$, TAS, and $\delta\psi$
(the two components of the horizontal wind, the true airspeed, and
an assumed error in heading) are constant, then the expected ground-speed
components will be:

\begin{align}
v_{x} & =\bar{u_{x}}+TAS\,\sin(\psi+\delta\psi)\label{eq:circle-gs-components}\\
v_{y} & =\begin{gathered}\bar{u_{y}}+TAS\,\cos(\psi+\delta\psi)\end{gathered}
\nonumber 
\end{align}
where $\psi$ is the heading. The error between these expressions
for the ground speed and the measured ground-speed components $g_{x}$
and $g_{y}$ then can be minimized to find the four constant parameters
in (\ref{eq:circle-gs-components}) using this expression as a measure
of the error:

\begin{equation}
\chi^{2}=\sum((g_{x}-v_{x})^{2}+(g_{y}-v_{y})^{2})\label{eq:gs-chisq}
\end{equation}


The resulting best-fit values, with wind converted to wind direction
$\bar{v_{d}}$ and wind speed $\bar{v_{s}}$, are shown in Table~\ref{tab:GSmin}
and plotted in Fig.~\ref{fig:PlotGSvsWSc}.

<<PlotGSvsWSc, fig.lp="fig:", fig.cap="The ground-speed components measured by GPS (blue line, EW; green line, NS) and the corresponding results from the fit (red dashed lines) for the period of the circle maneuver.", include=TRUE>>=

Z <- plotWAC(D$Time, D$GGVEWB, ylab="GS Component, m/s", lwd=2)
Z <- lineWAC(D$Time, D$GGVNSB, col='green', lwd=2)
Z <- lineWAC(D$Time, vx, col='red',lwd=2,lty=2)
Z <- lineWAC(D$Time, vy, col='red',lwd=2,lty=2)
subtitle <- sprintf("best fit: red dashed lines")
title(main="G-EW [blue]; G-NS [green]", cex.main=0.75, sub=subtitle)


@

<<GSRMSRL, include=FALSE>>=

# define a chisquare error function:
csq <- function (x, D) {
  hdg <- (D$THDG+D$SS*cos(D$ROLL*pi/180)+x[4]) * pi / 180.
  dvx <- D$GGVEWB - (x[2] + x[1]*sin(hdg))
  dvy <- D$GGVNSB - (x[3] + x[1]*cos(hdg))
  chisq <- sum (dvx**2 + dvy**2)
}
DS <- D
D <- D[t1,]
NL <- length(D$GGVEWB)
rmsminL <- 1000
n <- 0
# for (n in 9:29) {
#   D$GGVNSB <- c(D$GGVNSB[(1+n):NL],rep(D$GGVNSB[NL],n))
#   D$GGVEWB <- c(D$GGVEWB[(1+n):NL],rep(D$GGVEWB[NL],n))
  wx <- 12.3
  wy <- 13.2
  V <- 154.
  hdg <- D$THDG * Cradeg
  AL <- nlm (csq, c(V, wx, wy, -0.1), D, hessian=TRUE)
  #print(A$estimate)
  VL <- AL$estimate[1]
  wxL <- AL$estimate[2]
  wyL <- AL$estimate[3]
  dhL <- AL$estimate[4]
 #print(sprintf(" wind estimate: %.1f / %.1f", atan2(wyL,wxL)*180/pi+180, sqrt(wxL**2+wyL**2)))
  vxL <- VL * cos(hdg+dhL*Cradeg) + wxL
  vyL <- VL * sin(hdg+dhL*Cradeg) + wyL
  rmsL <- (AL$minimum/length(D$THDG))**0.5
  if (rmsL < rmsminL) {
    rmsminL <- rmsL
    bestFitL <- AL$estimate
    #nbest <- n
#   }
  #print(sprintf("RMS error for shift of %d samples: %5.2f m/s", n, rms))
}

# impose best-fit shift nbest units forward in time
# D$GGVNSB <- c(D$GGVNSB[(1+nbest):NL],rep(D$GGVNSB[NL],nbest))
# D$GGVEWB <- c(D$GGVEWB[(1+nbest):NL],rep(D$GGVEWB[NL],nbest))
# best-fit wind:
bestWDL <- (atan2(bestFitL[2], bestFitL[3]) / Cradeg + 180.) %% 360
bestWSL <- sqrt(bestFitL[2]**2 + bestFitL[3]**2)
mwdL <- mean(D$WDC, na.rm=TRUE)
mwsL <- mean(D$WSC, na.rm=TRUE)
mtasL <- mean(D$TASX, na.rm=TRUE)
D <- DS		# restore original, then repeat for right turns
D <- D[t2,]
NL <- length(D$GGVEWB)
rmsminR <- 1000
n <- 0
# for (n in 9:29) {
#   D$GGVNSB <- c(D$GGVNSB[(1+n):NL],rep(D$GGVNSB[NL],n))
#   D$GGVEWB <- c(D$GGVEWB[(1+n):NL],rep(D$GGVEWB[NL],n))
  wx <- 12.3
  wy <- 13.2
  V <- 154.
  hdg <- D$THDG * Cradeg
  AR <- nlm (csq, c(V, wx, wy, -0.1), D, hessian=TRUE)
  #print(A$estimate)
  VR <- AR$estimate[1]
  wxR <- AR$estimate[2]
  wyR <- AR$estimate[3]
  dhR <- AR$estimate[4]
 #print(sprintf(" wind estimate: %.1f / %.1f", atan2(wyR,wxR)*180/pi+180, sqrt(wxR**2+wyR**2)))
  vxR <- VR * cos(hdg+dhR*Cradeg) + wxR
  vyR <- VR * sin(hdg+dhR*Cradeg) + wyR
  rmsR <- (AR$minimum/length(D$THDG))**0.5
  if (rmsR < rmsmin) {
    rmsminR <- rmsR
    bestFitR <- AR$estimate
    #nbest <- n
#   }
  #print(sprintf("RMS error for shift of %d samples: %5.2f m/s", n, rmsR))
}

# impose best-fit shift nbest units forward in time
# D$GGVNSB <- c(D$GGVNSB[(1+nbest):NL],rep(D$GGVNSB[NL],nbest))
# D$GGVEWB <- c(D$GGVEWB[(1+nbest):NL],rep(D$GGVEWB[NL],nbest))
# best-fit wind:
bestWDR <- (atan2(bestFitR[2], bestFitR[3]) / Cradeg + 180.) %% 360
bestWSR <- sqrt(bestFitR[2]**2 + bestFitR[3]**2)
mwdR <- mean(D$WDC, na.rm=TRUE)
mwsR <- mean(D$WSC, na.rm=TRUE)
mtasR <- mean(D$TASX, na.rm=TRUE)
D <- DS		# restore original

@

<<gs-only-analysis, include=TRUE>>=

D["WS"] <- D$WSC
D["Ang"] <- (D$THDG+(D$SS+0.11)*cos(D$ROLL*pi/180)-mwd) %% 360
D["TurnDirection"] <- as.integer(ifelse((D$ROLL > 0),1,2))
DF <- D[c(t1,t2),]
fmx1 <- lm(GGSPDB[DF$TurnDirection == 2] ~ sin(AA[DF$TurnDirection == 2]*pi/180)+cos(AA[DF$TurnDirection == 2]*pi/180), data=DF)
cfx1 <- coefficients(fmx1)
fmx2 <- lm(GGSPDB[DF$TurnDirection == 1] ~ sin(AA[DF$TurnDirection == 1]*pi/180)+cos(AA[DF$TurnDirection == 1]*pi/180), data=DF)
cfx2 <- coefficients(fmx2)
gsdiff1 <- max(D$GGSPDB[t1]) - min(D$GGSPDB[t1])
gsdiff2 <- max(D$GGSPDB[t2]) - min(D$GGSPDB[t2])
Z1 <- cfx1[1]+cfx1[2]*sin(DF$AA*pi/180.)+cfx1[3]*cos(DF$AA*pi/180.)
Z2 <- cfx2[1]+cfx2[2]*sin(DF$AA*pi/180.)+cfx2[3]*cos(DF$AA*pi/180.)
gsfdiff1 <- max(Z1) - min(Z1)
gsfdiff2 <- max(Z2) - min(Z2)



@

Repeating this analysis for the left-turn circles and right-turn circles
separately reveals a difference in the deduced wind that is about
1.2~m/s, as also listed in Table~\ref{tab:GSmin}:

\begin{center}
\begin{table}[H]
\begin{centering}
\begin{tabular}{cccccc}
\toprule 
 & $\bar{v_{d}}\,[^{\circ}]$ & $\bar{v_{s}}$~{[}m/s{]} & TAS~{[}m/s{]} & $\delta\psi\,[^{\circ}]$ & residual error {[}m/s{]}\tabularnewline
\midrule
\midrule 
all turns & \Sexpr{format(round(bestWD,1), nsmall=1)} & \Sexpr{round(bestWS,1)} & \Sexpr{round(bestFit[1],1)} & \Sexpr{round(bestFit[4],1)} & \Sexpr{format(round(rmsmin,1), nsmall=1)}\tabularnewline
\midrule 
mean of measurements & \Sexpr{format(round(mwd,1), nsmall=1)} & \Sexpr{format(round(mws,1), nsmall=1)} & \Sexpr{round(mtas,1)} &  & \tabularnewline
\midrule 
left turns & \Sexpr{format(round(bestWDL,1), nsmall=1)} & \Sexpr{round(bestWSL,1)} & \Sexpr{round(bestFitL[1],1)} & \Sexpr{round(bestFitL[4],1)} & \Sexpr{format(round(rmsminL,1), nsmall=1)}\tabularnewline
\midrule 
right turns & \Sexpr{format(round(bestWDR,1), nsmall=1)} & \Sexpr{round(bestWSR,1)} & \Sexpr{round(bestFitR[1],1)} & \Sexpr{round(bestFitL[4],1)} & \Sexpr{format(round(rmsminR,1), nsmall=1)}\tabularnewline
\bottomrule
\end{tabular}
\par\end{centering}

\protect\caption{The results obtained by minimizing the error measure (\ref{eq:gs-chisq})
for the circle maneuver.\label{tab:GSmin}}
\end{table}

\par\end{center}

A plausible case can be made for this difference between left-turn
and right-turn circles being real. Figure \ref{fig:gs-only-plot}
shows the GPS-derived measurements of ground speed. The amplitude
of the variation around the circle is smaller for the left-turn circles
vs.~the right-turn circles. (The left-turn circle also does not provide
nearly as good a fit to the assumption of steady wind as does the
right-turn circle.) The difference between maximum and minimum ground
speeds is \Sexpr{round(gsdiff1,1)} m/s for left-turn circles but
\Sexpr{round(gsdiff2,1)} m/s for right-turn circles, indicating a
difference in wind speed of \Sexpr{round((gsdiff1-gsdiff2)/2,1)}
m/s between the two turn directions.%
\footnote{If circles are fitted to the variations, the result is a difference
of \Sexpr{round((gsfdiff1-gsfdiff2)/2,1)} m/s.%
} This difference is determined from the GPS-derived ground-speed measurements
only and doesn't involve any other aspect of the wind-measuring systems
on the aircraft. Even heading or sideslip can be in significant error
without affecting this result for wind speed because the analysis
is based only on the maximum vs.~minimum values of the ground speed.
It is expected from instrument specifications that the measurement
of ground speed is much less uncertain that this, so the suggested
conclusion is that the difference in average wind is real in the regions
where the two circles were flown. This difference also contributes
to the rather large residual error because the combined fit assumes
that a single wind vector characterizes both circles. Figure \ref{fig:gw-only-plot}
is evidence that the right-turn circle provides a more consistent
result, so it will be emphasized in the following analysis. That circle
indicates that the wind vector is from 287$^{\circ}$ at 6.9 m/s and
that there is a heading error of 0.6$^{\circ}$. This is outside the
expected standard uncertainty of the heading provided by the inertial
reference system, but the angle $\Psi$ contains not only any error
in heading but also any error in sideslip. Furthermore, small differences
in the times when the measurements are acquired can affect the deduced
heading error because the aircraft is in a steady turn and an error
of 0.6$^{\circ}$ would result from a timing error of about 0.3 s.
The reverse-heading maneuvers showed that the error in sideslip, there
found to be 1.6$^{\circ}$, is larger than the error indicated here
for heading. The combination of these two errors is discussed more
in connection with the circle maneuvers.

<<gs-only-plot, fig.lp="fig:", fig.cap="Ground speed (GGSPDB) vs the angle of flight relative to the mean wind direction, for the circle pattern shown in Fig.\\ \\ref{fig:CircleFlightPatterns-1}. The dashed orange line represents a fit to a sinusoidal pattern separately for the right-turn and left-turn segments.", include=TRUE>>=
clr = c("fit", "left", "right")
col = c("darkorange", "blue", "darkgreen")
g <- ggplot(data=DF, aes(x=AA, y=GGSPDB))
g <- g + geom_point(data=DF[DF$TurnDirection == 2,],size=2, aes(colour=clr[2],shape=clr[2]))
g <- g + geom_point(data=DF[DF$TurnDirection == 1,],size=2, aes(colour=clr[3],shape=clr[3]))
g <- g + geom_line(aes(y=cfx1[1]+cfx1[2]*sin(DF$AA*pi/180.)+cfx1[3]*cos(DF$AA*pi/180.),  colour=clr[1]), lwd=1, lty=2)
g <- g + geom_line(aes(y=cfx2[1]+cfx2[2]*sin(DF$AA*pi/180.)+cfx2[3]*cos(DF$AA*pi/180.),  colour=clr[1]), lwd=1, lty=2)
g <- g + scale_colour_manual("", labels = clr, values = col)
g <- g + scale_shape_manual ("", guide=FALSE, labels = clr, values = rep(20,3))
g <- g + xlab("Heading - Wind Dir.") + ylab("Ground Speed [m/s]")+theme_WAC()     
g <- g + theme(legend.position=c(0.75,0.94))
g
# plot(AA[t1], D$GGSPDB[t1], pch=19, col='blue')
# points(AA[t2], D$GGSPDB[t2], pch=19, col='darkgreen')

@

<<plotGSRMS2, echo=FALSE, include=FALSE>>=

# define a chisquare error function:
csq3 <- function (x, D) {
  hdg <- (D$THDG+D$SS*cos(D$ROLL*pi/180)+x[4]) * pi / 180.
  dvx <- D$GGVEWB - (x[2] + (D$TASX+x[1])*sin(hdg))
  dvy <- D$GGVNSB - (x[3] + (D$TASX+x[1])*cos(hdg))
  chisq <- sum (dvx**2 + dvy**2)
}
# # try shifting GGVxxB forward n samples
# rms <- vector("numeric", 29)
GGVEWB <- D$GGVEWB
GGVNSB <- D$GGVNSB
NL <- length(D$GGVEWB)
rmsmin <- 1000
n = 0
# for (n in 9:29) {
#   D$GGVNSB <- c(D$GGVNSB[(1+n):NL],rep(D$GGVNSB[NL],n))
#   D$GGVEWB <- c(D$GGVEWB[(1+n):NL],rep(D$GGVEWB[NL],n))
  wx <- 12.3
  wy <- 13.2
  dV <- 1.
  hdg <- D$THDG * Cradeg
  A <- nlm (csq, c(dV, wx, wy, -0.1), D, hessian=TRUE)
#   D$GGVEWB <- GGVEWB
#   D$GGVNSB <- GGVNSB
    #print(A$estimate)
  dV <- A$estimate[1]
  wx <- A$estimate[2]
  wy <- A$estimate[3]
  dh <- A$estimate[4]
   #print(sprintf(" wind estimate: %.1f / %.1f", atan2(wy,wx)*180/pi+180, sqrt(wx**2+wy**2)))
  vx <- (D$TASX+dV) * cos(hdg+dh*Cradeg) + wx
  vy <- (D$TASX+dV) * sin(hdg+dh*Cradeg) + wy
  rms <- (A$minimum/length(D$THDG))**0.5
  if (rms < rmsmin) {
    rmsmin <- rms
    bestFit <- A$estimate
    #nbest <- n
  }
    #print(sprintf("RMS error for shift of %d samples: %5.2f m/s", n, rms[n]))
# }

# impose best-fit shift nbest units forward in time
# D$GGVNSB <- c(D$GGVNSB[(1+nbest):NL],rep(D$GGVNSB[NL],nbest))
# D$GGVEWB <- c(D$GGVEWB[(1+nbest):NL],rep(D$GGVEWB[NL],nbest))
# best-fit wind:
bestWD <- (atan2(bestFit[2], bestFit[3]) / Cradeg + 180.) %% 360
bestWS <- sqrt(bestFit[2]**2 + bestFit[3]**2)
mwd <- mean(D$WDC, na.rm=TRUE)
mws <- mean(D$WSC, na.rm=TRUE)
mtas <- mean(D$TASX, na.rm=TRUE)

# now repeat this for left turns separately
DS <- D		# save this
D <- D[t1,]	# left turn data only
NL <- length(D$GGVEWB)
rmsminL <- 1000
n = 0
# for (n in 9:29) {
#   D$GGVNSB <- c(D$GGVNSB[(1+n):NL],rep(D$GGVNSB[NL],n))
#   D$GGVEWB <- c(D$GGVEWB[(1+n):NL],rep(D$GGVEWB[NL],n))
  wx <- 12.3
  wy <- 13.2
  dV <- 1.
  hdg <- D$THDG * Cradeg
  A <- nlm (csq, c(dV, wx, wy, -0.1), D, hessian=TRUE)
#   D$GGVEWB <- GGVEWB
#   D$GGVNSB <- GGVNSB
    #print(A$estimate)
  dVL <- A$estimate[1]
  wxL <- A$estimate[2]
  wyL <- A$estimate[3]
  dhL <- A$estimate[4]
   #print(sprintf(" wind estimate: %.1f / %.1f", atan2(wy,wx)*180/pi+180, sqrt(wx**2+wy**2)))
  vxL <- (D$TASX+dV) * cos(hdg+dh*Cradeg) + wx
  vyL <- (D$TASX+dV) * sin(hdg+dh*Cradeg) + wy
  rmsL <- (A$minimum/length(D$THDG))**0.5
  if (rmsL < rmsminL) {
    rmsminL <- rmsL
    bestFitL <- A$estimate
    #nbest <- n
  }
    #print(sprintf("RMS error for shift of %d samples: %5.2f m/s", n, rms[n]))
# }

# impose best-fit shift nbest units forward in time
# D$GGVNSB <- c(D$GGVNSB[(1+nbest):NL],rep(D$GGVNSB[NL],nbest))
# D$GGVEWB <- c(D$GGVEWB[(1+nbest):NL],rep(D$GGVEWB[NL],nbest))
# best-fit wind:
bestWDL <- (atan2(bestFitL[2], bestFitL[3]) / Cradeg + 180.) %% 360
bestWSL <- sqrt(bestFitL[2]**2 + bestFitL[3]**2)
mwdL <- mean(D$WDC, na.rm=TRUE)
mwsL <- mean(D$WSC, na.rm=TRUE)
mtasL <- mean(D$TASX, na.rm=TRUE)

# now right turns only
D <- DS		# restore this
D <- D[t2,]
NL <- length(D$GGVEWB)
rmsminR <- 1000
n = 0
# for (n in 9:29) {
#   D$GGVNSB <- c(D$GGVNSB[(1+n):NL],rep(D$GGVNSB[NL],n))
#   D$GGVEWB <- c(D$GGVEWB[(1+n):NL],rep(D$GGVEWB[NL],n))
  wx <- 12.3
  wy <- 13.2
  dV <- 1.
  hdg <- D$THDG * Cradeg
  A <- nlm (csq, c(dV, wx, wy, -0.1), D, hessian=TRUE)
#   D$GGVEWB <- GGVEWB
#   D$GGVNSB <- GGVNSB
    #print(A$estimate)
  dVR <- A$estimate[1]
  wxR <- A$estimate[2]
  wyR <- A$estimate[3]
  dhR <- A$estimate[4]
   #print(sprintf(" wind estimate: %.1f / %.1f", atan2(wy,wx)*180/pi+180, sqrt(wx**2+wy**2)))
  vxR <- (D$TASX+dV) * cos(hdg+dh*Cradeg) + wx
  vyR <- (D$TASX+dV) * sin(hdg+dh*Cradeg) + wy
  rmsR <- (A$minimum/length(D$THDG))**0.5
  if (rmsR < rmsminR) {
    rmsminR <- rmsR
    bestFitR <- A$estimate
    #nbest <- n
  }
    #print(sprintf("RMS error for shift of %d samples: %5.2f m/s", n, rms[n]))
# }

# impose best-fit shift nbest units forward in time
# D$GGVNSB <- c(D$GGVNSB[(1+nbest):NL],rep(D$GGVNSB[NL],nbest))
# D$GGVEWB <- c(D$GGVEWB[(1+nbest):NL],rep(D$GGVEWB[NL],nbest))
# best-fit wind:
bestWDR <- (atan2(bestFitR[2], bestFitR[3]) / Cradeg + 180.) %% 360
bestWSR <- sqrt(bestFitR[2]**2 + bestFitR[3]**2)
mwdR <- mean(D$WDC, na.rm=TRUE)
mwsR <- mean(D$WSC, na.rm=TRUE)
mtasR <- mean(D$TASX, na.rm=TRUE)

D <- DS

@

<<getRMS2, echo=FALSE>>=

hdg <- (D$THDG+bestFit[4])*Cradeg
vx <- bestFit[1] * cos(hdg) + bestFit[2]   
vy <- bestFit[1] * sin(hdg) + bestFit[3]
gs <- sqrt(D$GGVEWB**2+D$GGVNSB**2)
vs <- sqrt(vx**2+vy**2)
rmsgs <- (sum((gs-vs)**2)/length(gs))**0.5

@

The preceding fit used a constant true airspeed, but it is also possible
to fit in the same way for an assumed error in true airspeed, by using
$V=V_{m}+\delta V$ where $V_{m}$ is the measured value and $\delta V$
is an assumed error in that measurement. There is some small variation
in measured true airspeed during the maneuver, perhaps created by
the normal oscillation that results from the flight management system,
so this approach may be preferable. However, the resulting best-fit
values were very close to those shown in Table~\ref{tab:GSmin}.


\paragraph{Offsets in TAS and heading}

An alternate way of determining the offsets in airspeed and heading,
which illustrates the value of the circle maneuver for developing
these constraints, is to plot the dependence of measured wind speed
$v_{s}$ on the heading. The expected variation is for $v_{s}$ to
change by $2\delta V$ from upwind to downwind flight and by $2V\delta\psi$
from crosswind-right to crosswind-left flight direction (i.e., 90$^{\circ}$
right of downwind vs.~90$^{\circ}$ left). The net effect is to produce
a variation in $v_{s}$ given by:

\begin{equation}
v_{s}=\bar{v_{s}}+\delta V\cos\gamma+V\delta\psi\sin\gamma\label{eq:SinCosDep}
\end{equation}
where $\gamma$ is the difference between the heading and the wind
direction. Figure \ref{fig:sine-cosine-plot} illustrates the expected
dependence that would result from errors of $\delta V$ = 1~m/s and
$\delta\psi=0.3^{\mbox{\ensuremath{\circ}}}$. The plot is constructed
so that $0^{\circ}$ corresponds to downwind flight and the difference
between values at 0 and 180$^{\circ}$corresponds to $2\delta V$,
while the difference from $90$ to 270$^{\circ}$ represents $2V\delta\psi$. 

<<sine-cosine-plot, fig.lp="fig:", fig.cap="Predicted dependence of measured wind speed on direction of flight relative to the wind direction, for assumed errors of $\\delta V=1$ m/s and $\\delta\\psi=0.3^{\\circ}$.", include=TRUE>>=

op <- par (mfrow=c(1,1), mar=c(4,4,0,2)+0.1)
A1 <- 1.
A2 <- mtas*0.3*pi/180.
Ang <- (1:1440)/4.
plot(Ang, A2*sin(Ang*pi/180.)+A1*cos(Ang*pi/180.) + bestWS, type='l', col='darkorange', lwd=4, xlab="heading minus WD", ylab="Measured WS [m/s]", xlim=c(0.,400.))
#title("Simulation")
text(90.,bestWS, labels=expression(paste(2,V,delta,psi)),cex=0.75)
#lines(c(180.,180.), c(bestWS+0.2, bestWS+1), col='red', lwd=2)
#lines(c(180.,180.), c(bestWS-0.2, bestWS-1), col='red', lwd=2)
arrows(90.,bestWS+0.2,90.,bestWS+A2,length=0.2, col='red', lwd=2)
arrows(90.,bestWS-0.2,90.,bestWS-A2,length=0.2, col='red', lwd=2)
text(180.,bestWS, labels=expression(paste(2,delta,V)), cex=0.75)
#lines(c(180.,180.), c(bestWS+0.2, bestWS+A1), col='red', lwd=2)
#lines(c(180.,180.), c(bestWS-0.2, bestWS-A1), col='red', lwd=2)
arrows(180.,bestWS+0.2,180.,bestWS+A1,length=0.2, col='red', lwd=2)
arrows(180.,bestWS-0.2,180.,bestWS-A1,length=0.2, col='red', lwd=2)
lines(c(0.,360.),c(bestWS+A1,bestWS+A1), col='blue',lty=2,lwd=0.7)
lines(c(0.,360.),c(bestWS-A1,bestWS-A1), col='blue',lty=2,lwd=0.7)
lines(c(0.,360.),c(bestWS+A2,bestWS+A2), col='darkgreen',lty=2,lwd=0.7)
lines(c(0.,360.),c(bestWS-A2,bestWS-A2), col='darkgreen',lty=2,lwd=0.7)

@

<<sine-fit>>=
WS <- D$WSC
Ang <- (D$THDG+D$SS*cos(D$ROLL*pi/180)-mwd) %% 360
# left turns:
rs <- setRange(D$Time, startL, endL)
DF <- D[rs,]
DF["Ang"] <- Ang[rs]
DF["WS"] <- WS[rs]
fm1 <- lm (WS~sin(Ang*pi/180.)+cos(Ang*pi/180.), data=DF)
cf1 <- coefficients(fm1)
# right turns
rsr <- setRange(D$Time, startR, endR)
DF <- D[rsr,]
DF["Ang"] <- Ang[rsr]
DF["WS"] <- WS[rsr]
fm2 <- lm (WS~sin(Ang*pi/180.)+cos(Ang*pi/180.), data=DF)
cf2 <- coefficients(fm2)

@

It is then possible to determine $\delta V$ and $\delta\psi$ by
fitting (\ref{eq:SinCosDep}) to observations. The measurements will
be shown separately for the left-turn circles and the right-turn circles
because there is a difference between them. Figures~\ref{fig:left-turn-circles}
and \ref{fig:right-turn-circles} show the measurements, and the results
of the fits are shown in Table \ref{tab:SinCosCoefficients}.%
\footnote{The values for wind speed are similar to those in Table 1, but the
estimated error in heading is much smaller. The reason is that the
heading as used in this section has been corrected for the effect
of sideslip, using (\ref{eq:dpsiprime}) below. %
} The plots do not show a significant sinusoidal pattern as expect
from Fig.~\ref{fig:sine-cosine-plot} but, for the more reliable
case shown in Fig.~\ref{fig:right-turn-circles}, only show a total
standard deviation in measured wind speed of about 0.5\,m/s, indicating
an uncertainty limit within that range. The sine-function fit is not
a very good representation of the data, but it indicates that the
error in true airspeed is about 0.2 m/s and the error in heading is
about -0.1$^{\circ}$ after adjustment for the measured sideslip.
Because there are variations that appear to have larger amplitudes
and do not follow the expected sinusoidal variation, it may be better
to regard this fit and the scatter in Fig.~\ref{fig:right-turn-circles}
as indications that the measurements have uncertainty limits within
these values.
\begin{table}
\noindent \begin{centering}
\begin{tabular}{ccccc}
\toprule 
 & mean wind {[}m/s{]} & $\delta V$~{[}m/s{]} & $\delta\psi\,[^{\circ}]$ & residual error {[}m/s{]}\tabularnewline
\midrule
\midrule 
left-turn circles & \Sexpr{format(round(cf1[1],1), nsmall=1)} & \Sexpr{format(round(cf1[3],1), nsmall=1)} & \Sexpr{format(round(cf1[2]/(mtas*pi/180.),2), nsmall=2)} & \Sexpr{round(summary(fm1)$sigma,2)}\tabularnewline
\midrule 
right-turn circles & \Sexpr{format(round(cf2[1],1), nsmall=1)} & \Sexpr{format(round(cf2[3],1), nsmall=1)} & \Sexpr{format(round(cf2[2]/(mtas*pi/180.),2), nsmall=2)} & \Sexpr{round(summary(fm2)$sigma,2)}\tabularnewline
\bottomrule
\end{tabular}
\par\end{centering}

\protect\caption{Fit results for the left-turn and right-turn circles as fitted by
(\ref{eq:SinCosDep}).\label{tab:SinCosCoefficients}}
\end{table}


<<left-turn-circles, fig.lp="fig:", fig.cap="Measured wind speed from the left-turn circles in the circle pattern shown in Fig.\\ \\ref{fig:CircleFlightPatterns-1}, as a function of the difference between the heading and the mean wind direction.", include=TRUE>>=

clr = c("fit", "measurements", "fit")
col = c("darkorange", "blue", "darkorange")
g <- ggplot(data=DF, aes(x=Ang, y=WS))
g <- g + geom_point(colour=col[2], size=2, aes(shape="measurements")) 
g <- g + geom_line(aes(y=cf1[1]+cf1[2]*sin(DF$Ang*pi/180.)+cf1[3]*cos(DF$Ang*pi/180.),  colour=clr[1]), lwd=3)
g <- g + scale_colour_manual("", labels = clr, values = col)
g <- g + scale_shape_manual ("", labels="measurements", values=19)
g <- g + xlab("Heading - Wind Dir.") + ylab("Wind Speed [m/s]")+theme_WAC()     
g <- g + theme(legend.position=c(0.7,0.94))
print(g)
#plot (Ang[rs], WS[rs], pch=19, col='blue')
#lines(c(180,180), c(0.,50.), col='red', lwd=2)
#lines(c(0,0), c(0.,50.), col='red', lwd=2)
#lines(c(90,90), c(0.,50.), col='red', lwd=2)
#lines(c(270,270), c(0.,50.), col='red', lwd=2)
#lines(c(360,360), c(0.,50.), col='red', lwd=2)
#lines(Ang[rs], cf1[1]+cf1[2]*sin(Ang[rs]*pi/180.)+cf1[3]*cos(Ang[rs]*pi/180.), col='darkorange', lwd=4)

@

<<right-turn-circles, fig.lp="fig:", fig.cap="As for Fig.\\ \\ref{fig:left-turn-circles} but for the right-hand circles.", include=TRUE>>=

clr = c("fit", "measurements", "fit")
col = c("darkorange", "darkgreen", "darkorange")
g <- ggplot(data=DF, aes(x=Ang, y=WS))
g <- g + geom_point(colour=col[2], size=2, aes(shape="measurements")) 
g <- g + geom_line(aes(y=cf2[1]+cf2[2]*sin(DF$Ang*pi/180.)+cf2[3]*cos(DF$Ang*pi/180.),  colour=clr[1]), lwd=3)
g <- g + scale_colour_manual("", labels = clr, values = col)
g <- g + scale_shape_manual ("", labels="measurements", values=19)
g <- g + xlab("Heading - Wind Dir.") + ylab("Wind Speed [m/s]")+theme_WAC()     
g <- g + theme(legend.position=c(0.25,0.94))
g
#plot (Ang[rs], WS[rs], pch=19, col='blue')
#lines(c(180,180), c(0.,50.), col='red', lwd=2)
#lines(c(0,0), c(0.,50.), col='red', lwd=2)
#lines(c(90,90), c(0.,50.), col='red', lwd=2)
#lines(c(270,270), c(0.,50.), col='red', lwd=2)
#lines(c(360,360), c(0.,50.), col='red', lwd=2)
#lines(Ang[rs], cf2[1]+cf2[2]*sin(Ang[rs]*pi/180.)+cf2[3]*cos(Ang[rs]*pi/180.), col='darkorange', lwd=4)

@


\paragraph{Offset in Sideslip\label{par:Offset-in-Sideslip}}

In the preceding, the error $\delta\psi$ was discussed as an error
in heading, but the error could also be one in sideslip. These errors
are difficult to separate and normal reverse-heading maneuvers do
not provide a separation. Furthermore, heading errors likely change
during a flight because error terms undergo a Schuler oscillation
and are also affected by horizontal accelerations such as occur persistently
in turns like those in the circle maneuver. The error term determined
as in the above tables is $\delta\psi^{\prime}$ given by

\begin{equation}
\delta\psi^{\prime}=\delta\psi+\cos\phi\delta\beta\label{eq:dpsiprime}
\end{equation}
where $\phi$ is the roll angle and $\delta\beta$ is the offset in
sideslip. The sideslip calibration was determined in Sect.~\ref{sub:Sensitivity-coefficient}
from yaw maneuvers, but those maneuvers also cannot separate an offset
in heading from an offset in sideslip so the first coefficient in
the calibration, representing the zero offset, is not constrained
well by these maneuvers. Because the dependence in (\ref{eq:dpsiprime})
is on the cosine of the roll which is an even function, left and right
turns are affected in the same way and cannot distinguish the two
terms in the equation.

Two approaches could be taken. Because the roll angle changes when
circles are flown at different altitudes, results from different-altitude
circles could be used to distinguish a sideslip offset from a heading
offset. Perhaps a more straightforward test, though, is to compare
the sideslip measurement in left vs right turns. In these two cases,
some sideslip is introduced as the aircraft configuration remains
slightly nose-up during the turn, and that sideslip should reverse
sign by symmetry. The lift required to maintain altitude would be
the same if the roll angles were opposite, and they nearly are for
these maneuvers (1.46$^{\circ}$ larger for right turns), and the
angle of attack is also close to the same, so the expected sign reversal
in sideslip can be used to determine the offset in sideslip. The measurements
of sideslip%
\footnote{The sensitivity coefficients as determined in Sect.~\vref{SS-offset}
have been used to construct this figure.%
} are shown in Fig.~\ref{fig:plotSS}. The red dashed line shows the
indicated offset (-0.11$^{\circ}$) that is required if the two turn
directions are to have the same magnitude of sideslip. where it is
evident that an offset of about 0.11$^{\circ}$ needs to be added
to the sideslip measurements to produce the expected symmetry. Because
1.6$^{\circ}$ was already added to the coefficient determined from
yaw maneuvers (originally -0.165) on the basis of the earlier analysis
of the reverse-heading maneuver, i.e., 1.435$^{\circ}$, this indicates
that the sideslip offset coefficient should be 1.55, or the resulting
sensitivity coefficients for sideslip should be \{$e_{o},\, e_{1}$\}
= \{1.55, 12.85\}. The estimated standard uncertainty in the first
coefficient is about 0.1 on the basis of differences among the various
estimates of this coefficient and on the basis of uncertainty in the
heading measurement on which some of these calibration methods depend.
The uncertainty in the second coefficient, estimated from the standard
uncertainty with which the slope could be determined in Fig.~2, is
about 0.04, 

<<plotSS, fig.lp="fig:", fig.cap = "Measurement of sideslip during the circle maneuver from FRAPPE flight 9, with left-turn circles from 19:19:36 -- 19:22:28 UTC, followed by a straight segment and then right-turn circles 19:23:08 -- 19:26:02 UTC.", include=TRUE>>=

Capn <- "Sideslip measured turning the circle maneuvers, first turning left (19:19:36 -- 19:22:28) and then turning right (19:23:08 -- 19:26:02). Mean values for these segments are indicated by dashed orange lines."
Z <- plotWAC(D$Time, D$SS, ylab="Sideslip")
lines(c(D$Time[1], D$Time[length(D$Time)]), c(-0.11,-0.11), col='red', lty=2, lwd=4)
yr <- mean(D$SS[setRange(D$Time,191936,192228)])
lines(c(D$Time[getIndex(D$Time,191936)], D$Time[getIndex(D$Time, 192228)]), c(yr,yr), col='darkorange', lty=2, lwd=4)
yr <- mean(D$SS[setRange(D$Time, 192308,192602)])
lines(c(D$Time[getIndex(D$Time,192308)], D$Time[getIndex(D$Time, 192602)]), c(yr,yr), col='darkorange', lty=2, lwd=4)
#title(main=' ', sub="add 0.11 deg. to SSLIP to correct for offset", cex.sub=0.7)

@

With this shift applied, the dependence of the left-turn and right-turn
circles is shown in Fig.~\ref{fig:combined-circles}. 

<<combined-circles, fig.lp="fig:", fig.cap="Wind speed as a function of heading relative to the wind direction, with a fit to the combined data set shown.", include=TRUE, fig.align='center'>>=

# combined left and right turns
rs <- c(setRange(D$Time,191936,192228),setRange(D$Time, 192308, 192602))
DF <- D[rs,]
fmc <- lm (WS~sin(Ang*pi/180.)+cos(Ang*pi/180.), data=DF)
cfc <- coefficients(fmc)

clr = c("fit", "left", "right")
col = c("darkorange", "blue", "darkgreen")
g <- ggplot(data=DF, aes(x=Ang, y=WS))
g <- g + geom_point(data=DF[DF$TurnDirection == 2,],size=2, aes(colour=clr[2],shape=clr[2]))
g <- g + geom_point(data=DF[DF$TurnDirection == 1,],size=2, aes(colour=clr[3],shape=clr[3]))
g <- g + geom_line(aes(y=cfc[1]+cfc[2]*sin(DF$Ang*pi/180.)+cfc[3]*cos(DF$Ang*pi/180.),  colour=clr[1]), lwd=3)
g <- g + scale_colour_manual("", labels = clr, values = col)
g <- g + scale_shape_manual ("", guide=FALSE, labels = clr, values = rep(20,3))
g <- g + xlab("Heading - Wind Dir.") + ylab("Wind Speed [m/s]")+theme_WAC()     
g <- g + theme(legend.position=c(0.75,0.94))
g

# get value for equation below:
rmeanL <- mean(DF$ROLL[DF$TurnDirection == 2])
rmeanR <- mean(DF$ROLL[DF$TurnDirection == 1])
tasmL <- mean(DF$TASX[DF$TurnDirection == 2])
tasmR <- mean(DF$TASX[DF$TurnDirection == 1])
print (c(rmeanL, rmeanR))
print(sprintf(" left turns: mean TAS = %.2f, ROLL = %.2f, right turns %.2f %.2f", tasmL, rmeanL, tasmR, rmeanR))
dv <- 0.5*mean(DF$TASX)*tan(rmeanR*pi/180)*(rmeanR+rmeanL)*pi/180
print (sprintf(" predicted TAS difference is %.2f", dv))

@

The best-fit coefficients are as shown in Table~\vref{tab:Fit-results},
where the values for left-turn-only and right-turn-only measurements
are repeated and shown with the results from both circles combined.

\noindent \begin{center}
\begin{table}
\noindent \centering{}%
\fbox{\begin{minipage}[t]{1\columnwidth}%
\noindent \begin{center}
\begin{tabular}{|c|c|c|c|c|}
\hline 
 & mean wind {[}m/s{]} & $\delta V$~{[}m/s{]} & $\delta\psi\,[^{\circ}]$ & residual error {[}m/s{]}\tabularnewline
\hline 
\hline 
left-turn circles & \Sexpr{round(cf1[1],1)} & \Sexpr{format(round(cf1[3],1), nsmall=1)} & \Sexpr{format(round(cf1[2]/(mtas*pi/180.),2), nsmall=2)} & \Sexpr{round(summary(fm1)$sigma,2)}\tabularnewline
\hline 
right-turn circles & \Sexpr{round(cf2[1],1)} & \Sexpr{format(round(cf2[3],1), nsmall=1)} & \Sexpr{format(round(cf2[2]/(mtas*pi/180.),2), nsmall=2)} & \Sexpr{round(summary(fm2)$sigma,2)}\tabularnewline
\hline 
combined & \Sexpr{round(cfc[1],1)} & \Sexpr{format(round(cfc[3],1), nsmall=1)} & \Sexpr{round(cfc[2]/(mtas*pi/180.)-0.11,2)} & \Sexpr{round(summary(fmc)$sigma,2)}\tabularnewline
\hline 
\end{tabular}
\par\end{center}

\protect\caption{Fit results for errors in true airspeed $V$ and heading $\Psi$ and
the residual errors from the fits of Eq.~\vref{eq:SinCosDep} to
the circles.\label{tab:Fit-results} }
%
\end{minipage}}
\end{table}

\par\end{center}


\section{Recommendations, angle of attack, sideslip, heading, and true airspeed}


\subsection{Sensitivity coefficients:}

The coefficients in Table~\ref{tab:SensCoef} include all adjustments
discussed in this memo and should be the best to use for FRAPPE. The
coefficients are dependent on the accuracy of the attitude angles
provided by the IRU and will be changed in cases where the pitch or
heading aligns differently or otherwise develops errors different
from those at the time these coefficients were determined. Both angles
have uncertainty of about 0.05$^{\circ}$ so that contributes to the
uncertainty in results from these fits.

\noindent \begin{center}
\begin{table}
\noindent \centering{}%
\Ovalbox{\begin{minipage}[t]{1\columnwidth}%
\noindent \begin{center}
\begin{tabular}{ccc}
\toprule 
\textbf{angle} & $c_{0}$ & $c_{1}$\tabularnewline
\midrule
\midrule 
AKRD & \Sexpr{format(round(cfr[1],3), nsmall=3)} & \Sexpr{format(round(cfr[2],3), nsmall=3)}\tabularnewline
\midrule 
SSRD & \Sexpr{format(round(cfs[1]+0.11,3), nsmall=3)} & \Sexpr{format(round(cfs[2],3), nsmall=3)}\tabularnewline
\bottomrule
\end{tabular}
\par\end{center}

\protect\caption{Recommended sensitivity coefficients for the C-130 in FRAPPE\label{tab:SensCoef}}
%
\end{minipage}}
\end{table}

\par\end{center}


\subsection{Pressure corrections for the static defect}

With the angle of attack determined as in Table~\vref{tab:SensCoef},
the formula for C-130 pressure corrections that was previously determined
should remain valid. The formulas for PSFD, QCF, PSFRD, and QCFR are
given with Eq.~\vref{eq:PCOReq2} of this memo.


\subsection{Corrections to TAS, sideslip, and heading ($V,\,\beta,\,\Psi):$}

The results from the circle maneuver analyzed here are summarized
in Table~\ref{tab:CircleCorrections}. The right-turn circle maneuver,
which appears to be in more steady conditions than the left-turn circle,
indicates that the airspeed may need adjustment by +0.2~m/s. This
is small enough and still uncertain, because the conditions during
this circle maneuver were not as steady as desirable, so it appears
preferable to make no further correction to the true airspeed. The
sideslip correction is already incorporated in the summary table above.
The heading correction appears reliable enough that a correction of
-0.2$^{\circ}$to heading appears justified and is recommended.

\noindent \begin{center}
\begin{table}
\noindent \centering{}%
\Ovalbox{\begin{minipage}[t]{1\columnwidth}%
\noindent \begin{center}
\begin{tabular}{cccc}
\toprule 
\textbf{type} & \textbf{true airspeed error $\delta V$ {[}m/s{]}} & \textbf{sideslip error $\delta\beta$ {[}$^{\circ}${]}}%
\footnote{included in Table \ref{tab:SensCoef} above for SSRD%
} & \textbf{heading error $\delta\Psi$ {[}$^{\circ}${]}}\tabularnewline
\midrule
\midrule 
left-turn & \Sexpr{format(round(cf1[3],1),nsmall=1)} & 0.11 & \Sexpr{format(round(cf1[2]/(mtas*pi/180.)-0.11,2), nsmall=2)}\tabularnewline
\midrule 
\textsl{\textcolor{red}{right-turn}} & \textsl{\textcolor{red}{\Sexpr{format(round(cf2[3],1),nsmall=1)}}} & \textsl{\textcolor{red}{0.11}} & \textsl{\textcolor{red}{\Sexpr{format(round(cf2[2]/(mtas*pi/180.)-0.11,2), nsmall=2)}}}\tabularnewline
\midrule 
combined & \Sexpr{format(round(cfc[3],1),nsmall=1)} & 0.11 & \Sexpr{format(round(cfc[2]/(mtas*pi/180.)-0.11,2), nsmall=2)}\tabularnewline
\bottomrule
\end{tabular}
\par\end{center}

\protect\caption{Angle and airspeed adjustments suggested from the circle maneuver
of FRAPPE flight~9, 19:19--19:27 UTC. The highlighted results from
the right turn appear to be more reliable than those from the left
turn or the combined results because conditions were more uniform
around the right-turn circle.\label{tab:CircleCorrections}}
%
\end{minipage}}
\end{table}

\par\end{center}

\noindent \begin{center}

\par\end{center}



\begin{center}
\textsf{\textcolor{blue}{-- End of Memo --\vfill\eject}}
\par\end{center}

Reproducibility:

\begin{tabular}{ll}
\textsf{\textsc{\textcolor{blue}{Project:}}} & \Sexpr{thisFileName}\tabularnewline
\textsf{\textsc{\textcolor{blue}{Archive package:}}} & \Sexpr{thisFileName}.zip\tabularnewline
\textsf{\textsc{\textcolor{blue}{Contains:}}} & attachment list below\tabularnewline
\textsf{\textsc{\textcolor{blue}{Program:}}} & \Sexpr{thisFileName}.Rnw\tabularnewline
\textsf{\textsc{\textcolor{blue}{Original Data:}}} & /scr/raf\_data/\Sexpr{Project}/\Sexpr{Flight}.nc, /scr/raf\_data/FRAPPE/FRAPPErf04.nc \tabularnewline
\textsf{\textsc{\textcolor{blue}{Git:}}} & git@github.com:WilliamCooper/\Sexpr{Project}.git\tabularnewline
\end{tabular}

\attachm{\Sexpr{thisFileName}.Rnw\\\Sexpr{thisFileName}.pdf\\SessionInfo}
%\cc{first attachment\\second\\3rd att}
%\attach{attachment}
%\attachm{first\\second} %\cc{first attachment\\second\\3rd att}
<<save-system-info, echo=FALSE>>= 
cat (toLatex(sessionInfo()), file="SessionInfo")

@ 
<<make-zip-archive, echo=TRUE, INCLUDE=TRUE>>=
system (sprintf("zip %s.zip %s.Rnw %s.pdf SessionInfo", thisFileName, thisFileName, thisFileName))

@ 



%\cc{first attachment\\second\\3rd att}
\end{document}
